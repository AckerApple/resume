.flex-center
  .flex-1
    ng-container(*ngIf="boxValues;else noSupport")
      div
        //-
          .overflow-hidden.pos-rel.width-full.height-300
            .pos-abs.width-full.height-full.flex-center.flex-valign-center(
              "[style.transform]" = "boxValues.transform | safeStyle"
            )
              .bg-positive(
                style="border-right:2px solid red;border-top:2px solid white;"
                "[style.transform]" = "boxValues.rotate"
                "[style.width.px]" = "boxValues.portrait ? 100 : 200"
                "[style.height.px]" = "boxValues.portrait ? 200 : 100"
              )
        
          a.block.pad.border.border-positive(
            "(click)" = "reset()"
          ) reset

        div
          .overflow-hidden.pos-rel.width-full.height-300
            .pos-abs.width-full.height-full.flex-center.flex-valign-center(
              "[style.transform]" = "boxValues.transformZ | safeStyle"
            )
              .flex-center.flex-valign-center.bg-positive(
                style="border-right:2px solid red;border-top:2px solid white;"
                "[style.width.px]" = "boxValues.portrait ? 100 : 200"
                "[style.height.px]" = "boxValues.portrait ? 200 : 100"
              )
                span alpha
          .flex-valign-center.child-pad-xs
            .width-40.text-sm.text-right 0
            .flex-1
              .border.border-white.radius-10.height-20(
                style="padding-right:2px"
              )
                .pos-rel
                  .pos-abs.text-center(
                    style="top:-4px"
                    "[style.left.%]" = "boxValues.aPercent"
                  )
                    ||
                    .line-height-70.text-xxs {{ boxValues.a }}
                  |&nbsp;
            .width-40.text-sm 360
          .text-center alpha
          
          .overflow-hidden.pos-rel.width-full.height-300
            .pos-abs.width-full.height-full.flex-center.flex-valign-center(
              "[style.transform]" = "boxValues.transformX | safeStyle"
            )
              .flex-center.flex-valign-center.bg-positive(
                style="border-right:2px solid red;border-top:2px solid white;"
                "[style.width.px]" = "boxValues.portrait ? 100 : 200"
                "[style.height.px]" = "boxValues.portrait ? 200 : 100"
              )
                span beta
          .flex-valign-center.child-pad-xs
            .width-40.text-sm.text-right -180
            .flex-1
              .border.border-white.radius-10.height-20(
                style="padding-right:2px"
              )
                .pos-rel
                  .pos-abs.text-center(
                    style="top:-4px"
                    "[style.left.%]" = "boxValues.bPercent"
                  )
                    ||
                    .line-height-70.text-xxs {{ boxValues.b }}
                  |&nbsp;
            .width-40.text-sm 180
          .text-center beta
          
          .overflow-hidden.pos-rel.width-full.height-300
            .pos-abs.width-full.height-full.flex-center.flex-valign-center(
              "[style.transform]" = "boxValues.transformY | safeStyle"
            )
              .flex-center.flex-valign-center.bg-positive(
                style="border-right:2px solid red;border-top:2px solid white;"
                "[style.width.px]" = "boxValues.portrait ? 100 : 200"
                "[style.height.px]" = "boxValues.portrait ? 200 : 100"
              )
                span gamma
          .flex-valign-center.child-pad-xs
            .width-40.text-sm.text-right -90
            .flex-1
              .border.border-white.radius-10.height-20(
                style="padding-right:2px"
              )
                .pos-rel
                  .pos-abs.text-center(
                    style="top:-4px"
                    "[style.left.%]" = "boxValues.gPercent"
                  )
                    ||
                    .line-height-70.text-xxs {{ boxValues.g }}
                  |&nbsp;
            .width-40.text-sm 90
          .text-center gamma

      //-
        a.block.pad.border.border-positive(
          "(click)" = "boxValues.portrait=!boxValues.portrait"
        ) {{ boxValues.portrait ? 'portrait' : 'landscape'}}
    //-
      .flex-wrap.child-margin
        .pad.border.border-white
          div
            input(
              type="checkbox"
              "(change)"="holdA=$event.target.checked"
            )
            |alpha 0,360
          .flex
            div(*ngFor="let item of [0,45,90,135,180,360]")
              input(
                type="radio"
                "[checked]" = "gyroValues.alpha===item"
                "(click)" = "gyroValues.alpha=item;createBoxValues()"
              )
              |{{item}}
          input(
            type = "number"
            "[value]"  = "gyroValues.alpha"
            "(change)" = "gyroValues.alpha=$event.target.value;createBoxValues()"
            max = "360"
            min = "0"
          )
        .pad.border.border-white
          div
            input(
              type="checkbox"
              "(change)"="holdB=$event.target.checked"
            )
            |beta -180,180
          .flex
            div(*ngFor="let item of [-180,-135,-90,-45,0,45,90,135,180]")
              input(
                type="radio"
                "[checked]" = "gyroValues.beta===item"
                "(click)" = "gyroValues.beta=item;createBoxValues()"
              )
              |{{item}}
          input(
            type = "number"
            "[value]"  = "gyroValues.beta"
            "(change)" = "gyroValues.beta=$event.target.value;createBoxValues()"
            max = "180"
            min = "-180"
          )
        
        .pad.border.border-white
          div
            input(
              type="checkbox"
              "(change)"="holdG=$event.target.checked"
            )
            |gamma -90,90
          .flex
            div(*ngFor="let item of [-90,-45,0,45,90]")
              input(
                type="radio"
                "[checked]" = "gyroValues.gamma===item"
                "(click)" = "gyroValues.gamma=item;createBoxValues()"
              )
              |{{item}}
          input(
            type = "number"
            "[value]"  = "gyroValues.gamma"
            "(change)" = "gyroValues.gamma=$event.target.value;createBoxValues()"
            max = "90"
            min = "-90"
          )
      br
      br
    //-
      textarea.width-full.height-200.no-wrap(readonly)
        |{{ gyroValues | json }}
        |{{ boxValues | json }}
        //-|{{ resetValues | json }}

    ng-template(#noSupport="")
      .pad.bg-warning.text-warning
        i.fas.fa-exclamation-triangle
        |&nbsp;&nbsp;
        |Device orientation not supported